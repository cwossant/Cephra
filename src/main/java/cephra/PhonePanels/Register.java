package cephra.PhonePanels;

public class Register extends javax.swing.JPanel {

    public Register() {
        initComponents();
        setPreferredSize(new java.awt.Dimension(350, 750));
        setSize(350, 750);
        makeDraggable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        overlayButton = new javax.swing.JButton();

        setLayout(null);
        
        // Match Splashscreen/Phonelogin configuration
        setOpaque(false);
        setBackground(new java.awt.Color(0, 0, 0, 0));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cephra/Photos/REGISTER.png"))); // NOI18N
        jLabel1.setPreferredSize(new java.awt.Dimension(400, 814));
        jLabel1.setOpaque(false);
        add(jLabel1);
        jLabel1.setBounds(-14, -32, 400, 814);

        // Invisible but clickable overlay (same bounds as image)
        overlayButton.setOpaque(false);
        overlayButton.setContentAreaFilled(false);
        overlayButton.setBorderPainted(false);
        overlayButton.setFocusPainted(false);
        overlayButton.setText("");
        overlayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                overlayButtonActionPerformed(evt);
            }
        });
        add(overlayButton);
        overlayButton.setBounds(-14, -32, 400, 814);
    }// </editor-fold>//GEN-END:initComponents

    private void overlayButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // Intentionally left blank (no console output)
    }

    private void makeDraggable() {
        final java.awt.Point[] pressPoint = new java.awt.Point[1];

        java.awt.event.MouseAdapter adapter = new java.awt.event.MouseAdapter() {
            @Override
            public void mousePressed(java.awt.event.MouseEvent e) {
                pressPoint[0] = e.getPoint();
            }

            @Override
            public void mouseDragged(java.awt.event.MouseEvent e) {
                java.awt.Component src = (java.awt.Component) e.getSource();
                java.awt.Window window = javax.swing.SwingUtilities.getWindowAncestor(src);
                if (window != null && pressPoint[0] != null) {
                    java.awt.Point loc = window.getLocation();
                    window.setLocation(loc.x + e.getXOnScreen() - (loc.x + pressPoint[0].x),
                                       loc.y + e.getYOnScreen() - (loc.y + pressPoint[0].y));
                }
            }
        };

        // Attach to the panel itself
        this.addMouseListener(adapter);
        this.addMouseMotionListener(adapter);
        // Also attach to child components that cover the panel
        if (overlayButton != null) {
            overlayButton.addMouseListener(adapter);
            overlayButton.addMouseMotionListener(adapter);
        }
        if (jLabel1 != null) {
            jLabel1.addMouseListener(adapter);
            jLabel1.addMouseMotionListener(adapter);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton overlayButton;
    // End of variables declaration//GEN-END:variables
}

